type Tweet {
  id: ObjID!
  author: User
  coauthors: [User!]
  body: String!
  likers(lastCreatedAt: Float, limit: Int): [User!]
  createdAt: Float!
  createdBy: User!
  updatedAt: Float!
  updatedBy: User
}

extend type Query {
  tweets(lastCreatedAt: Float, limit: Int): [Tweet!]
  tweet(id: ObjID!): Tweet
}

input CreateTweetInput {
  authorId: ObjID!
  body: String!
  coauthorsIds: [ObjID!]
}

input UpdateTweetInput {
  body: String!
  coauthorsIds: [ObjID!]
}

extend type Mutation {
  createTweet(input: CreateTweetInput!): Tweet
  updateTweet(id: ObjID!, input: UpdateTweetInput!): Tweet
  removeTweet(id: ObjID!): Boolean
}

extend type Subscription {
  tweetCreated: Tweet
  tweetUpdated: Tweet
  tweetRemoved: ObjID
}
